"use strict";var precacheConfig=[["/davidtron.github.io/multitouch/index.html","b0804c6e19bdb1e24d1431c16c317257"],["/davidtron.github.io/multitouch/static/css/main.d693e1d5.css","f8f7a18589a9ebb4d37985c9b344b859"],["/davidtron.github.io/multitouch/static/js/main.ec4b9778.js","fa2b9b576c0fd42da0530727f316833e"],["/davidtron.github.io/multitouch/static/media/addNodeIcon.a1a2d01b.png","a1a2d01bcd034270a3bc92176edfb66c"],["/davidtron.github.io/multitouch/static/media/backIcon.dd0baa69.png","dd0baa69a69937600dc3bf035f3873c4"],["/davidtron.github.io/multitouch/static/media/connectIcon.d5267b8d.png","d5267b8db2498e44bd567bd12e07576b"],["/davidtron.github.io/multitouch/static/media/cross.260c9c65.png","260c9c6535065674bb5e59a73f894abb"],["/davidtron.github.io/multitouch/static/media/deleteIcon.02d321ed.png","02d321edc6e03aea1675001899d8f479"],["/davidtron.github.io/multitouch/static/media/editIcon.d5422321.png","d5422321c4f6feed4081891051f9a6b2"],["/davidtron.github.io/multitouch/static/media/infitexlogo.dfacd3c7.svg","dfacd3c788014b4d9977a075563dbbab"],["/davidtron.github.io/multitouch/static/media/levels.7bc0813c.svg","7bc0813cef7b5c5fe2eafa2b7801204a"],["/davidtron.github.io/multitouch/static/media/magnify.0b95cbd1.svg","0b95cbd10378f16c0ff25dcb787424d8"],["/davidtron.github.io/multitouch/static/media/plug.f7c6541f.svg","f7c6541f17b24e2f86233a6ddd9b34ad"],["/davidtron.github.io/multitouch/static/media/serial-websocket.60f0eba4.jar","60f0eba4fe48554d9c5b5dd417283294"],["/davidtron.github.io/multitouch/static/media/usbcable.6c279068.svg","6c279068efac1fd38e7bbce7fe173bdb"]],cacheName="sw-precache-v3-sw-precache-webpack-plugin-"+(self.registration?self.registration.scope:""),ignoreUrlParametersMatching=[/^utm_/],addDirectoryIndex=function(e,t){var n=new URL(e);return"/"===n.pathname.slice(-1)&&(n.pathname+=t),n.toString()},cleanResponse=function(t){return t.redirected?("body"in t?Promise.resolve(t.body):t.blob()).then(function(e){return new Response(e,{headers:t.headers,status:t.status,statusText:t.statusText})}):Promise.resolve(t)},createCacheKey=function(e,t,n,a){var i=new URL(e);return a&&i.pathname.match(a)||(i.search+=(i.search?"&":"")+encodeURIComponent(t)+"="+encodeURIComponent(n)),i.toString()},isPathWhitelisted=function(e,t){if(0===e.length)return!0;var n=new URL(t).pathname;return e.some(function(e){return n.match(e)})},stripIgnoredUrlParameters=function(e,n){var t=new URL(e);return t.hash="",t.search=t.search.slice(1).split("&").map(function(e){return e.split("=")}).filter(function(t){return n.every(function(e){return!e.test(t[0])})}).map(function(e){return e.join("=")}).join("&"),t.toString()},hashParamName="_sw-precache",urlsToCacheKeys=new Map(precacheConfig.map(function(e){var t=e[0],n=e[1],a=new URL(t,self.location),i=createCacheKey(a,hashParamName,n,/\.\w{8}\./);return[a.toString(),i]}));function setOfCachedUrls(e){return e.keys().then(function(e){return e.map(function(e){return e.url})}).then(function(e){return new Set(e)})}self.addEventListener("install",function(e){e.waitUntil(caches.open(cacheName).then(function(a){return setOfCachedUrls(a).then(function(n){return Promise.all(Array.from(urlsToCacheKeys.values()).map(function(t){if(!n.has(t)){var e=new Request(t,{credentials:"same-origin"});return fetch(e).then(function(e){if(!e.ok)throw new Error("Request for "+t+" returned a response with status "+e.status);return cleanResponse(e).then(function(e){return a.put(t,e)})})}}))})}).then(function(){return self.skipWaiting()}))}),self.addEventListener("activate",function(e){var n=new Set(urlsToCacheKeys.values());e.waitUntil(caches.open(cacheName).then(function(t){return t.keys().then(function(e){return Promise.all(e.map(function(e){if(!n.has(e.url))return t.delete(e)}))})}).then(function(){return self.clients.claim()}))}),self.addEventListener("fetch",function(t){if("GET"===t.request.method){var e,n=stripIgnoredUrlParameters(t.request.url,ignoreUrlParametersMatching),a="index.html";(e=urlsToCacheKeys.has(n))||(n=addDirectoryIndex(n,a),e=urlsToCacheKeys.has(n));var i="/davidtron.github.io/multitouch/index.html";!e&&"navigate"===t.request.mode&&isPathWhitelisted(["^(?!\\/__).*"],t.request.url)&&(n=new URL(i,self.location).toString(),e=urlsToCacheKeys.has(n)),e&&t.respondWith(caches.open(cacheName).then(function(e){return e.match(urlsToCacheKeys.get(n)).then(function(e){if(e)return e;throw Error("The cached response that was expected is missing.")})}).catch(function(e){return console.warn('Couldn\'t serve response for "%s" from cache: %O',t.request.url,e),fetch(t.request)}))}});