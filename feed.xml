<?xml version="1.0" encoding="utf-8" ?>
<rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:wfw="http://wellformedweb.org/CommentAPI/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>spiraltechnology</title>
    <atom:link href="http://www.spiraltechnology.co.uk/feed.xml" rel="self" type="application/rss+xml"></atom:link>
    <link>http://www.spiraltechnology.co.uk</link>
    <description>simple, pragmatic, elegant code</description>
    <pubDate>Thu, 16 Jan 2014 00:00:00 +0000</pubDate>
    <generator>Wintersmith - https://github.com/jnordberg/wintersmith</generator>
    <language>en</language>
    <item>
      <title>Pointing 123-reg hosted domain to GitHub pages</title>
      <link>http://www.spiraltechnology.co.uk/articles/123-reg-to-github-pages/</link>
      <pubDate>Thu, 16 Jan 2014 00:00:00 +0000</pubDate>
      <guid isPermaLink="true">http://www.spiraltechnology.co.uk/articles/123-reg-to-github-pages/</guid>
      <author></author>
      <description>&lt;p&gt;After &lt;a href=&quot;http://www.spiraltechnology.co.uk/articles/building-static-blog/index.html&quot;&gt;building&lt;/a&gt; this blog statically and pushing it up to GitHub as a project page,
I then wanted to point my domain at it.&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;more&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;My intention is to point the www subdomain of spiraltechnology.co.uk at my static website hosted by GitHub at &lt;a href=&quot;http://davidtron.github.io/&quot;&gt;&lt;a href=&quot;http://davidtron.github.io&quot;&gt;http://davidtron.github.io&lt;/a&gt;&lt;/a&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;In the root of my website create a file called &lt;a href=&quot;https://github.com/davidtron/spiraltechnology-website/blob/master/contents/CNAME&quot;&gt;CNAME&lt;/a&gt; and put the name of my subdomain in it &lt;em&gt;www.spiraltechnology.co.uk&lt;/em&gt;.
Since my site is generated by wintersmith, I needed to drop the file into the contents directory before generating the site.
This is then generated by wintersmith into my deployment directory and pushed to my GitHub userpage repository&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;lang-bash&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;cd&lt;/span&gt; ~/dev/spiraltechnology-website
wintersmith build
&lt;span class=&quot;built_in&quot;&gt;cd&lt;/span&gt; ~/dev/spiraltechnology-website-deploy
git add CNAME
git commit &lt;span class=&quot;operator&quot;&gt;-a&lt;/span&gt; -m &lt;span class=&quot;string&quot;&gt;&quot;Adding the CNAME for custom domain&quot;&lt;/span&gt;
git push origin master&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The next step is to configure my DNS so that any requests for www.spiraltechnology.co.uk point to my GitHub user page.
The help pages at &lt;a href=&quot;https://help.github.com/articles/setting-up-a-custom-domain-with-pages&quot;&gt;GitHub &lt;/a&gt; suggest that this is done using a CNAME entry at your domain provider.
My domain is hosted with &lt;a href=&quot;http://123-reg.co.uk/&quot;&gt;123-reg&lt;/a&gt; and it’s relatively straightforward to update DNS entries for domains you own.
Log on to 123 and you will be presented with your control panel&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://www.spiraltechnology.co.uk/articles/123-reg-to-github-pages/123-control-panel.png&quot; alt=&quot;123 reg control panel&quot;&gt;&lt;/p&gt;
&lt;p&gt;Find the domain you want to manage from the drop down and select ‘Manage’&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://www.spiraltechnology.co.uk/articles/123-reg-to-github-pages/123-domain-options.png&quot; alt=&quot;123 domain controls&quot;&gt;&lt;/p&gt;
&lt;p&gt;Under the Advance domain settings, select ‘Manage DNS’&lt;/p&gt;
&lt;p&gt;&lt;img src='added-cname-for-www-to-github.png' style='width: 590px;' /&gt;&lt;/p&gt;
&lt;p&gt;Finally add an entry for www as a CNAME pointing to the GitHub userpage (davidtron.github.io)&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
</description>
    </item>
    <item>
      <title>Static html blog</title>
      <link>http://www.spiraltechnology.co.uk/articles/building-static-blog/</link>
      <pubDate>Fri, 10 Jan 2014 00:00:00 +0000</pubDate>
      <guid isPermaLink="true">http://www.spiraltechnology.co.uk/articles/building-static-blog/</guid>
      <author></author>
      <description>&lt;p&gt;After 2 years of inactivity, I decided to resurrect my blog as a place to store technical snippets.  Previously I wrote my blog using &lt;a href=&quot;http://jekyllrb.com/&quot;&gt;Jekyll&lt;/a&gt;, but did not get on with Ruby and constant Gem updates, so am giving &lt;a href=&quot;http://wintersmith.io/&quot;&gt;Wintersmith&lt;/a&gt; a try, it’s built on top of node.js, easy to install and under active development.&lt;/p&gt;
&lt;p&gt;Last time I ground to a halt because my laptop was stolen before I backed up the code anywhere, so I’ll be pushing the source to GitHub and trying out their user pages for hosting.&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;more&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Install node.js I chose to &lt;a href=&quot;http://nodejs.org/download/&quot;&gt;download&lt;/a&gt; the package and install it, but it’s available on  brew as well.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Install &lt;a href=&quot;https://github.com/jnordberg/wintersmith#quick-start&quot;&gt;wintersmith&lt;/a&gt; using npm.  The -g option makes it globally available.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;lang-bash&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;sudo&lt;/span&gt; npm install wintersmith -g&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;As I had decided that I be wanted to store the source of the website and host the output on GitHub, I needed to create a repository to show my user pages and a repository to store the source code of the website. &lt;/p&gt;
&lt;p&gt; The user pages are created in the format &lt;em&gt;username.github.io&lt;/em&gt; so in my case I created a public repository named davidtron.github.io 
 &lt;img src=&quot;http://www.spiraltechnology.co.uk/articles/building-static-blog/create-user-repo.png&quot; alt=&quot;creating new deployment repository&quot;&gt;&lt;/p&gt;
&lt;p&gt; I then created another repository for the sourcecode called spiraltechnology-website&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Open a terminal and check out the empty repository, in my case into my dev directory.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;lang-bash&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;cd&lt;/span&gt; ~/dev
git clone https://github.com/davidtron/spiraltechnology-website&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Create a new website, by default wintersmith will create you a basic blog structure with a plugin to render blog articles and an rss feed.  It complains if the directory exists, but in this case I want to populate the directory of my empty spiraltechnology-website repo, so I used the —force flag.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;lang-bash&quot;&gt;wintersmith new spiraltechnology-website --force
&lt;span class=&quot;built_in&quot;&gt;cd&lt;/span&gt; spiraltechnology-website
wintersmith preview&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The first problem I had was &lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;lang-bash&quot;&gt;template archive.jade: /Users/david/dev/spiraltechnology-website/
templates/layout.jade: &amp;gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;| !!! &lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Looks like the version in npm is not yet up to date with the version on github.  To fix follow it’s advice and &lt;em&gt;replace !!! 5&lt;/em&gt; with &lt;em&gt;doctype html&lt;/em&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;lang-bash&quot;&gt;nano -w /Users/david/dev/spiraltechnology-website/templates/layout.jade&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Once done you can view the site in a browser on localhost:8080&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;After creating some content and tweaking the layout and css, I added my files, commited them to my local repo then pushed the changes up to github.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;lang-bash&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;cd&lt;/span&gt; ~/dev/spiraltechnology-website-deploy
git add *
git commit &lt;span class=&quot;operator&quot;&gt;-a&lt;/span&gt; -m &lt;span class=&quot;string&quot;&gt;&quot;First pages commit. WIP&quot;&lt;/span&gt;
git push origin master&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Once happy with the site, you need to configure wintersmith to build the flat files to a local directory and the contents on this directory needs to be &lt;a href=&quot;http://pages.github.com/&quot;&gt;published to the username.github.io repository&lt;/a&gt; we created earlier.&lt;/p&gt;
&lt;p&gt;Checkout the empty repository&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;lang-bash&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;cd&lt;/span&gt; ~/dev
git clone https://github.com/davidtron/davidtron.github.io.git spiraltechnology-website-deploy
&lt;span class=&quot;built_in&quot;&gt;cd&lt;/span&gt; spiraltechnology-website-deploy
git checkout master&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Configure wintersmith to build to the deploy directory. This is controlled by adding an output option to config.json in the root of the directory wintersmith created for us.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;lang-javascript&quot;&gt;{
  &lt;span class=&quot;string&quot;&gt;&quot;locals&quot;&lt;/span&gt;: {
    &lt;span class=&quot;string&quot;&gt;&quot;url&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;http://www.spiraltechnology.co.uk&quot;&lt;/span&gt;,
    &lt;span class=&quot;string&quot;&gt;&quot;name&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;spiraltechnology&quot;&lt;/span&gt;,
    &lt;span class=&quot;string&quot;&gt;&quot;owner&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;David&quot;&lt;/span&gt;,
    &lt;span class=&quot;string&quot;&gt;&quot;description&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;simple, pragmatic, elegant code&quot;&lt;/span&gt;
  },
  &lt;span class=&quot;string&quot;&gt;&quot;output&quot;&lt;/span&gt; : &lt;span class=&quot;string&quot;&gt;&quot;../spiraltechnology-website-deploy&quot;&lt;/span&gt;
  ...
}&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;In the source directory compile the website, it should output it into the newly created deployment directory&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;lang-bash&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;cd&lt;/span&gt; ~/dev/spiraltechnology-website
wintersmith build&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Add the files in the github pages branch and push it up to the server.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;lang-bash&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;cd&lt;/span&gt; ~/dev/spiraltechnology-website-deploy
git add *
git commit &lt;span class=&quot;operator&quot;&gt;-a&lt;/span&gt; -m &lt;span class=&quot;string&quot;&gt;&quot;First pages commit.&quot;&lt;/span&gt;
git push origin master&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Check that it’s published after a few minutes at &lt;a href=&quot;http://davidtron.github.io&quot;&gt;http://davidtron.github.io&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
</description>
    </item>
    <item>
      <title>Install phone gap apps on iPhone without developer account</title>
      <link>http://www.spiraltechnology.co.uk/articles/phonegap-ios-without-developer-account/</link>
      <pubDate>Fri, 10 Jan 2014 00:00:00 +0000</pubDate>
      <guid isPermaLink="true">http://www.spiraltechnology.co.uk/articles/phonegap-ios-without-developer-account/</guid>
      <author></author>
      <description>&lt;ol&gt;
&lt;li&gt;Download nodes
&lt;a href=&quot;http://nodejs.org/download/&quot;&gt;http://nodejs.org/download/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Install phonegap
 $ sudo npm install -g phonegap&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;phonegap create my-app
cd my-app
phone gap build ios&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;How to build and install phone gap apps on jailbroken iOS 7 devices&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Create a self signed certificate&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;open the Keychain Access application&lt;/li&gt;
&lt;li&gt;select Keychain Access &amp;gt; Certificate Assistant &amp;gt; Create A Certificate …  &lt;/li&gt;
&lt;li&gt;On the first page fill in the following
Name: iPhone Developer
Identify Type: Self Signed Root
Certification Type: Code Signing
Select “Let me override defaults” and press continue, it will say “You are about to create a self-signed certificate.” 
   press continue&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;On the second page fill in the following
 Serial number: 1
 Validity period : 3650&lt;/p&gt;
&lt;pre&gt;&lt;code&gt; press continue&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;On the third page remove your email address.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;Keep pressing continue until you reach the Specify location page, press create.&lt;/li&gt;
&lt;/ul&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Open the terminal. For Xcode 5.02 these paths are valid but might need to be updated for newer versions. &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;cd /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;create a backup of Info.plist and change it into xml&lt;blockquote&gt;
&lt;p&gt;sudo cp -p Info.plist Info.plist.orig
sudo plutil -convert xml1 ./Info.plist&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;$ # replace each occurrence of CiPhoneOSCodeSignContext with XCCodeSignContext in Info.plist
$ sudo sed -i .bkup ‘s/XCiPhoneOSCodeSignContext/XCCodeSignContext/g’ ./Info.plist&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://mhassan.me/2013/02/15/using-xcode-without-provisioning-profile/&quot;&gt;http://mhassan.me/2013/02/15/using-xcode-without-provisioning-profile/&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
  </channel>
</rss>