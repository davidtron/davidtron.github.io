<?xml version="1.0" encoding="utf-8" ?>
<rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:wfw="http://wellformedweb.org/CommentAPI/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>spiraltechnology</title>
    <atom:link href="http://www.spiraltechnology.co.uk/feed.xml" rel="self" type="application/rss+xml"></atom:link>
    <link>http://www.spiraltechnology.co.uk</link>
    <description>simple, pragmatic, elegant code</description>
    <pubDate>Thu, 16 Jan 2014 00:00:00 +0000</pubDate>
    <generator>Wintersmith - https://github.com/jnordberg/wintersmith</generator>
    <language>en</language>
    <item>
      <title>Pointing your domain to github pages</title>
      <link>http://www.spiraltechnology.co.uk/articles/123-reg-to-github-pages/</link>
      <pubDate>Thu, 16 Jan 2014 00:00:00 +0000</pubDate>
      <guid isPermaLink="true">http://www.spiraltechnology.co.uk/articles/123-reg-to-github-pages/</guid>
      <author></author>
      <description>&lt;p&gt;After &lt;a href=&quot;http://www.spiraltechnology.co.uk/articles/building-static-blog/index.html&quot;&gt;building&lt;/a&gt; this blog statically and pushing it up to github as a project page,
I then wanted to point my domain at it.&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;more&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;In the root of my website create a file called &lt;a href=&quot;https://github.com/davidtron/spiraltechnology-website/blob/master/contents/CNAME&quot;&gt;CNAME&lt;/a&gt; and put the name of my domain in it &lt;em&gt;spiraltechnology.co.uk&lt;/em&gt;.
To do this in a wintersmith generated site, you need to drop the file into the contents directory before generating the site.   This is then generated by wintersmith and pushed to the gh branch of the website&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code class=&quot;lang-bash&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;cd&lt;/span&gt; ~/dev/spiraltechnology-website
wintersmith build
&lt;span class=&quot;built_in&quot;&gt;cd&lt;/span&gt; ~/dev/spiraltechnology-website-deploy
git add CNAME
git commit &lt;span class=&quot;operator&quot;&gt;-a&lt;/span&gt; -m &lt;span class=&quot;string&quot;&gt;&quot;Adding the CNAME for custom domain&quot;&lt;/span&gt;
git push origin gh-pages&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;2.
Setting up a custom domain at &lt;a href=&quot;https://help.github.com/articles/setting-up-a-custom-domain-with-pages&quot;&gt;GitHub &lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    <item>
      <title>Static html blog</title>
      <link>http://www.spiraltechnology.co.uk/articles/building-static-blog/</link>
      <pubDate>Fri, 10 Jan 2014 00:00:00 +0000</pubDate>
      <guid isPermaLink="true">http://www.spiraltechnology.co.uk/articles/building-static-blog/</guid>
      <author></author>
      <description>&lt;p&gt;After 2 years of inactivity, I decided to resurrect my blog as a place to store technical snippets.  Previously I wrote my blog using &lt;a href=&quot;http://jekyllrb.com/&quot;&gt;Jekyll&lt;/a&gt;, but did not get on with Ruby and constant Gem updates, so am giving &lt;a href=&quot;http://wintersmith.io/&quot;&gt;Wintersmith&lt;/a&gt; a try, it’s built on top of node.js, easy to install and under active development.&lt;/p&gt;
&lt;p&gt;Last time I ground to a halt because my laptop was stolen before I backed up the code anywhere, so I’ll be pushing the source to GitHub and trying out their user pages for hosting.&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;more&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Install node.js I chose to &lt;a href=&quot;http://nodejs.org/download/&quot;&gt;download&lt;/a&gt; the package and install it, but it’s available on  brew as well.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Install &lt;a href=&quot;https://github.com/jnordberg/wintersmith#quick-start&quot;&gt;wintersmith&lt;/a&gt; using npm.  The -g option makes it globally available.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;lang-bash&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;sudo&lt;/span&gt; npm install wintersmith -g&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;As I had decided that I be wanted to store the source of the website and host the output on GitHub, I needed to create a repository to show my user pages and a repository to store the source code of the website. &lt;/p&gt;
&lt;p&gt; The user pages are created in the format &lt;em&gt;username.github.io&lt;/em&gt; so in my case I created a public repository named davidtron.github.io 
 &lt;img src=&quot;http://www.spiraltechnology.co.uk/articles/building-static-blog/create-user-repo.png&quot; alt=&quot;creating new deployment repository&quot;&gt;&lt;/p&gt;
&lt;p&gt; I then created another repository for the sourcecode called spiraltechnology-website&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Open a terminal and check out the empty repository, in my case into my dev directory.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;lang-bash&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;cd&lt;/span&gt; ~/dev
git clone https://github.com/davidtron/spiraltechnology-website&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Create a new website, by default wintersmith will create you a basic blog structure with a plugin to render blog articles and an rss feed.  It complains if the directory exists, but in this case I want to populate the directory of my empty spiraltechnology-website repo, so I used the —force flag.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;lang-bash&quot;&gt;wintersmith new spiraltechnology-website --force
&lt;span class=&quot;built_in&quot;&gt;cd&lt;/span&gt; spiraltechnology-website
wintersmith preview&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The first problem I had was &lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;lang-bash&quot;&gt;template archive.jade: /Users/david/dev/spiraltechnology-website/
templates/layout.jade: &amp;gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;| !!! &lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Looks like the version in npm is not yet up to date with the version on github.  To fix follow it’s advice and &lt;em&gt;replace !!! 5&lt;/em&gt; with &lt;em&gt;doctype html&lt;/em&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;lang-bash&quot;&gt;nano -w /Users/david/dev/spiraltechnology-website/templates/layout.jade&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Once done you can view the site in a browser on localhost:8080&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;After creating some content and tweaking the layout and css, I added my files, commited them to my local repo then pushed the changes up to github.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;lang-bash&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;cd&lt;/span&gt; ~/dev/spiraltechnology-website-deploy
git add *
git commit &lt;span class=&quot;operator&quot;&gt;-a&lt;/span&gt; -m &lt;span class=&quot;string&quot;&gt;&quot;First pages commit. WIP&quot;&lt;/span&gt;
git push origin master&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Once happy with the site, you need to configure wintersmith to build the flat files to a local directory and the contents on this directory needs to be &lt;a href=&quot;http://pages.github.com/&quot;&gt;published to the username.github.io repository&lt;/a&gt; we created earlier.&lt;/p&gt;
&lt;p&gt;Checkout the empty repository&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;lang-bash&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;cd&lt;/span&gt; ~/dev
git clone https://github.com/davidtron/davidtron.github.io.git spiraltechnology-website-deploy
&lt;span class=&quot;built_in&quot;&gt;cd&lt;/span&gt; spiraltechnology-website-deploy
git checkout master&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Configure wintersmith to build to the deploy directory. This is controlled by adding an output option to config.json in the root of the directory wintersmith created for us.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;lang-javascript&quot;&gt;{
  &lt;span class=&quot;string&quot;&gt;&quot;locals&quot;&lt;/span&gt;: {
    &lt;span class=&quot;string&quot;&gt;&quot;url&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;http://www.spiraltechnology.co.uk&quot;&lt;/span&gt;,
    &lt;span class=&quot;string&quot;&gt;&quot;name&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;spiraltechnology&quot;&lt;/span&gt;,
    &lt;span class=&quot;string&quot;&gt;&quot;owner&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;David&quot;&lt;/span&gt;,
    &lt;span class=&quot;string&quot;&gt;&quot;description&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;simple, pragmatic, elegant code&quot;&lt;/span&gt;
  },
  &lt;span class=&quot;string&quot;&gt;&quot;output&quot;&lt;/span&gt; : &lt;span class=&quot;string&quot;&gt;&quot;../spiraltechnology-website-deploy&quot;&lt;/span&gt;
  ...
}&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;In the source directory compile the website, it should output it into the newly created deployment directory&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;lang-bash&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;cd&lt;/span&gt; ~/dev/spiraltechnology-website
wintersmith build&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Add the files in the github pages branch and push it up to the server.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;lang-bash&quot;&gt; &lt;span class=&quot;built_in&quot;&gt;cd&lt;/span&gt; ~/dev/spiraltechnology-website-deploy
 git add *
 git commit &lt;span class=&quot;operator&quot;&gt;-a&lt;/span&gt; -m &lt;span class=&quot;string&quot;&gt;&quot;First pages commit.&quot;&lt;/span&gt;
 git push origin master&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;
</description>
    </item>
  </channel>
</rss>